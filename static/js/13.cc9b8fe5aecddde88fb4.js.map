{"version":3,"sources":["webpack:///src/components/eco/eco.vue","webpack:///./src/components/eco/eco.vue?bfd6","webpack:///./src/components/eco/eco.vue","webpack:///./src/components/eco/util.js"],"names":["__webpack_exports__","name","data","isDialogShow","falseData","config","mapSize","blockPix","seaLevel","maxHeight","contourDistanceOfLand","contourDistanceOfOcean","contourDistanceOfVegetation","showData","i","j","altitude","slope","overgroundWater","undergroundWater","vegetation","map","mixins","__WEBPACK_IMPORTED_MODULE_0__util_js__","mounted","methods","start","this","domHeight","$","attr","css","initMap","renderMap","Array","createMountain","waveGround","smoothLand","_i","_j","Math","max","_i2","_j2","highestPos","lowestPos","createOvergroundWater","smoothOvergroundWater","createUndergroundWater","createVegetation","smoothVegetation","ctx","document","getElementById","getContext","rgb","rgbGround","linearColorRGB","fillStyle","r","g","b","rgbVege","fillRect","mousemove","e","floor","offsetX","offsetY","min","x","y","mouseout","changeAltitude","beginX","beginY","endX","endY","value","changeUndergroundWater","changeOvergroundWater","changeVegetation","minPos","posLen","minHei","heiLen","minRan","ranLen","ridgeNum","valleyNum","number","createMountainCore","random","height","range","distance","sqrt","cos","PI","n","vectorX","vectorY","_i3","_j3","_distance","directionX","directionY","cosOfTwoVector","tempX","tempY","_n","_vectorX","_vectorY","_i4","_j4","_distance2","_directionX","_directionY","_cos","_tempX","_tempY","createRiver","width","highestPosX","highestPosY","curX","curY","nextPos","_i5","_j5","_i6","_j6","log","canGrowVegetation","prob","pos","_i7","_j7","_random","_i8","_j8","_random2","map2","_i9","_j9","_i10","_j10","_i11","_j11","total","ii","jj","_i12","_j12","_i13","_j13","_i14","_j14","addVege","winding","seeding","_i15","_j15","times","exp","_i16","_j16","subVege","changeSeaLevel","to","eco_eco","render","_vm","_h","$createElement","_c","_self","staticClass","directives","rawName","expression","attrs","label-width","label","size","readonly","model","callback","$$v","$set","_v","id","on","change","$event","type","click","title","center","visible","show-close","close-on-click-modal","close-on-press-escape","update:visible","step","slot","staticRenderFns","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","eco","x1","r1","g1","b1","x2","r2","g2","b2","gap","arguments","length","undefined","inverseColorRGB","flag","y1","y2"],"mappings":"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","file":"static/js/13.cc9b8fe5aecddde88fb4.js","sourcesContent":["<template>\r\n  <div class=\"wrap\">\r\n    <div v-show=\"!isDialogShow\" class=\"board\">\r\n      <div class=\"ope\">\r\n        <el-form label-width=\"60px\">\r\n          <el-form-item label=\"x\">\r\n            <el-input size=\"small\" v-model=\"showData.x\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"y\">\r\n            <el-input size=\"small\" v-model=\"showData.y\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"海拔\">\r\n            <el-input size=\"small\" v-model=\"showData.altitude\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"坡度\">\r\n            <el-input size=\"small\" v-model=\"showData.slope\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"地上水\">\r\n            <el-input size=\"small\" v-model=\"showData.overgroundWater\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"地下水\">\r\n            <el-input size=\"small\" v-model=\"showData.undergroundWater\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"植被\">\r\n            <el-input size=\"small\" v-model=\"showData.vegetation\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <canvas id=\"c1\" @mousemove=\"mousemove\" @mouseout=\"mouseout\"></canvas>\r\n      <div class=\"ope\">\r\n        <el-form label-width=\"100px\">\r\n          <el-form-item label=\"地图大小\">\r\n            <el-input size=\"small\" v-model=\"config.mapSize\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"格子像素\">\r\n            <el-input size=\"small\" v-model=\"config.blockPix\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"海平面\">\r\n            <el-input size=\"small\" v-model=\"config.seaLevel\" :readonly=\"true\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"陆地等高距\">\r\n            <el-input-number size=\"small\" v-model=\"config.contourDistanceOfLand\" :min=\"1\" @change=\"renderMap()\"></el-input-number>\r\n          </el-form-item>\r\n          <el-form-item label=\"海洋等高距\">\r\n            <el-input-number size=\"small\" v-model=\"config.contourDistanceOfOcean\" :min=\"1\" @change=\"renderMap()\"></el-input-number>\r\n          </el-form-item>\r\n          <el-form-item label=\"植被等高距\">\r\n            <el-input-number size=\"small\" v-model=\"config.contourDistanceOfVegetation\" :min=\"1\" @change=\"renderMap()\"></el-input-number>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-show=\"!isDialogShow\" class=\"btns\">\r\n      <el-button type=\"primary\" @click=\"isDialogShow=true\">重开</el-button>\r\n      <el-button type=\"primary\" @click=\"start()\">重绘</el-button>\r\n      <el-button type=\"primary\" @click=\"addVege()\">植物传播</el-button>\r\n      <el-button type=\"primary\" @click=\"subVege()\">植物枯萎</el-button>\r\n      <el-button type=\"primary\" @click=\"changeSeaLevel(2)\">降雨</el-button>\r\n      <el-button type=\"primary\" @click=\"changeSeaLevel(-2)\">蒸发</el-button>\r\n    </div>\r\n\r\n    <el-dialog\r\n      title=\"新游戏\"\r\n      center\r\n      :visible.sync=\"isDialogShow\"\r\n      width=\"360px\"\r\n      :show-close=\"falseData\"\r\n      :close-on-click-modal=\"falseData\"\r\n      :close-on-press-escape=\"falseData\">\r\n      <el-form label-width=\"100px\">\r\n        <el-form-item label=\"地图大小\">\r\n          <el-input-number v-model=\"config.mapSize\" :min=\"10\" :max=\"500\" :step=\"10\"></el-input-number>\r\n        </el-form-item>\r\n        <el-form-item label=\"格子像素\">\r\n          <el-input-number v-model=\"config.blockPix\" :min=\"1\" :max=\"10\" :step=\"1\"></el-input-number>\r\n        </el-form-item>\r\n        <el-form-item label=\"海平面\">\r\n          <el-input-number v-model=\"config.seaLevel\" :min=\"0\" :step=\"2\"></el-input-number>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"\">\r\n        <el-button type=\"primary\" @click=\"start()\">开始</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n  .wrap{\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .board{\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n      justify-content: center;\r\n      align-items: center;\r\n      .ope{\r\n        width: 300px;\r\n        height: 100%;\r\n        padding: 20px;\r\n        box-sizing: border-box;\r\n        background-color: #ddd;\r\n        .el-form-item{\r\n          margin-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n    .btns{\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import utils from \"./util.js\"\r\n  export default {\r\n    name: \"eco\",\r\n    data(){\r\n      return{\r\n        isDialogShow: true,\r\n        falseData: false,\r\n        config: {\r\n          mapSize: 100,\r\n          blockPix: 6,\r\n          seaLevel: 40,\r\n          maxHeight: 0,\r\n          contourDistanceOfLand: 16,\r\n          contourDistanceOfOcean: 4,\r\n          contourDistanceOfVegetation: 4,\r\n        },\r\n        showData: {\r\n          i: \"\",\r\n          j: \"\",\r\n          altitude: \"\",\r\n          slope: \"\",\r\n          overgroundWater: \"\",\r\n          undergroundWater: \"\",\r\n          vegetation: \"\",\r\n        },\r\n        map: [],\r\n      }\r\n    },\r\n    mixins: [utils],\r\n    mounted(){\r\n\r\n    },\r\n    methods: {\r\n      start(){\r\n        this.isDialogShow = false;\r\n\r\n        //初始化dom大小\r\n        let domHeight = this.config.mapSize * this.config.blockPix;\r\n        $(\"#c1\").attr(\"width\", domHeight).attr(\"height\", domHeight);\r\n        $(\".board\").css(\"height\", domHeight);\r\n\r\n        this.initMap();\r\n        this.renderMap();\r\n      },\r\n      initMap(){\r\n        //初始化数组\r\n        this.map = new Array(this.config.mapSize);\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          this.map[i] = new Array(this.config.mapSize);\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.map[i][j] = {\r\n              i: i,\r\n              j: j,\r\n              altitude: 0,\r\n              slope: 0,\r\n              overgroundWater: 0,\r\n              undergroundWater: 0,\r\n              vegetation: 0,\r\n            };\r\n          }\r\n        }\r\n\r\n        //----生成地形\r\n        //大山\r\n        this.createMountain(this.config.mapSize/4,this.config.mapSize/4*2,80,160,this.config.mapSize/6,this.config.mapSize/8,3,2,1);\r\n        //小山\r\n        this.createMountain(this.config.mapSize/6,this.config.mapSize/6*4,30,30,this.config.mapSize/6,this.config.mapSize/6,1,1,6);\r\n        //凹凸\r\n        this.createMountain(0,this.config.mapSize,5,20,5,15,0,0,30);\r\n        this.createMountain(0,this.config.mapSize,20,30,10,5,0,0,10);\r\n        //大陆板块\r\n        this.createMountain(this.config.mapSize/8,this.config.mapSize/8*6,16,16,this.config.mapSize/3,this.config.mapSize/3,1,0,5);\r\n\r\n        //陆地波动\r\n        this.waveGround();\r\n\r\n        //平整陆地\r\n        this.smoothLand();\r\n\r\n        //设置最大高度\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.config.maxHeight = Math.max(this.config.maxHeight, this.map[i][j].altitude);\r\n          }\r\n        }\r\n\r\n        //设置坡度\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.map[i][j].slope=(this.highestPos(i,j,1).altitude-this.lowestPos(i,j,1).altitude)/2;\r\n          }\r\n        }\r\n\r\n        //----生成水分\r\n        //根据海平面高度填充地上水，无需地下水\r\n        this.createOvergroundWater();\r\n\r\n        //生成河流\r\n        // this.createRiver(this.config.mapSize/10,6);\r\n        // this.createRiver(this.config.mapSize/2,3);\r\n        // this.createRiver(this.config.mapSize/2,3);\r\n\r\n        //平整河水\r\n        this.smoothOvergroundWater(1);\r\n        this.smoothOvergroundWater(3);\r\n\r\n        //生成地下水\r\n        this.createUndergroundWater();\r\n\r\n        //----生成植被\r\n        //生成植被\r\n        this.createVegetation();\r\n\r\n        //平整植被\r\n        this.smoothVegetation(1);\r\n\r\n      },\r\n      renderMap(){\r\n        let ctx = document.getElementById(\"c1\").getContext(\"2d\");\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            let rgb = null;\r\n            let rgbGround=this.linearColorRGB(this.config.seaLevel,240,219,130, 350,74,47,0, this.map[i][j].altitude,this.config.contourDistanceOfLand);\r\n            if(this.map[i][j].overgroundWater>5){\r\n              //深水\r\n              rgb=this.linearColorRGB(this.config.seaLevel,0,0,60, 5,120,223,233, this.map[i][j].overgroundWater,this.config.contourDistanceOfOcean);\r\n              ctx.fillStyle=\"rgb(\"+rgb.r+\",\"+rgb.g+\",\"+rgb.b+\")\";\r\n            } else if(this.map[i][j].vegetation>0){\r\n              //植被\r\n              let rgbVege=this.linearColorRGB(0,1,125,10, 200,78,60,16, this.map[i][j].altitude);\r\n              rgb=this.linearColorRGB(25,rgbVege.r,rgbVege.g,rgbVege.b, 0,rgbGround.r,rgbGround.g,rgbGround.b, this.map[i][j].vegetation,this.config.contourDistanceOfVegetation);\r\n              ctx.fillStyle=\"rgb(\"+rgb.r+\",\"+rgb.g+\",\"+rgb.b+\")\";\r\n            } else if(this.map[i][j].overgroundWater>0){\r\n              //浅水\r\n              rgb=this.linearColorRGB(5,120,223,233, 0,rgbGround.r,rgbGround.g,rgbGround.b, this.map[i][j].overgroundWater, 1); //等高距默认1\r\n              ctx.fillStyle=\"rgb(\"+rgb.r+\",\"+rgb.g+\",\"+rgb.b+\")\";\r\n            } else {\r\n              //陆地\r\n              rgb = rgbGround;\r\n              ctx.fillStyle=\"rgb(\"+rgb.r+\",\"+rgb.g+\",\"+rgb.b+\")\";\r\n            }\r\n            ctx.fillRect(i*this.config.blockPix,j*this.config.blockPix,this.config.blockPix,this.config.blockPix);\r\n          }\r\n        }\r\n      },\r\n      mousemove(e){\r\n        let i = Math.floor(e.offsetX/this.config.blockPix);\r\n        let j = Math.floor(e.offsetY/this.config.blockPix);\r\n        i=Math.max(0,Math.min(this.config.mapSize-1,i));\r\n        j=Math.max(0,Math.min(this.config.mapSize-1,j));\r\n        this.showData.x = i;\r\n        this.showData.y = j;\r\n        this.showData.altitude = this.map[i][j].altitude;\r\n        this.showData.slope = this.map[i][j].slope;\r\n        this.showData.overgroundWater = this.map[i][j].overgroundWater;\r\n        this.showData.undergroundWater = this.map[i][j].undergroundWater;\r\n        this.showData.vegetation = this.map[i][j].vegetation;\r\n      },\r\n      mouseout(e){\r\n        this.showData.x = \"\";\r\n        this.showData.y = \"\";\r\n        this.showData.altitude = \"\";\r\n        this.showData.slope = \"\";\r\n        this.showData.overgroundWater = \"\";\r\n        this.showData.undergroundWater = \"\";\r\n        this.showData.vegetation = \"\";\r\n      },\r\n      changeAltitude(beginX, beginY, endX, endY, value) {\r\n        beginX = Math.max(Math.floor(beginX),0);\r\n        beginY = Math.max(Math.floor(beginY),0);\r\n        endX = Math.min(Math.floor(endX), this.config.mapSize-1);\r\n        endY = Math.min(Math.floor(endY), this.config.mapSize-1);\r\n        for(let i=beginX;i<=endX;i++)\r\n          for(let j=beginY;j<=endY;j++)\r\n            this.map[i][j].altitude+=value;\r\n      },\r\n      changeUndergroundWater(beginX, beginY, endX, endY, value) {\r\n        beginX = Math.max(Math.floor(beginX),0);\r\n        beginY = Math.max(Math.floor(beginY),0);\r\n        endX = Math.min(Math.floor(endX), this.config.mapSize-1);\r\n        endY = Math.min(Math.floor(endY), this.config.mapSize-1);\r\n        for(let i=beginX;i<=endX;i++)\r\n          for(let j=beginY;j<=endY;j++)\r\n            this.map[i][j].undergroundWater+=value;\r\n      },\r\n      changeOvergroundWater(beginX, beginY, endX, endY, value) {\r\n        beginX = Math.max(Math.floor(beginX),0);\r\n        beginY = Math.max(Math.floor(beginY),0);\r\n        endX = Math.min(Math.floor(endX), this.config.mapSize-1);\r\n        endY = Math.min(Math.floor(endY), this.config.mapSize-1);\r\n        for(let i=beginX;i<=endX;i++)\r\n          for(let j=beginY;j<=endY;j++)\r\n            this.map[i][j].overgroundWater+=value;\r\n      },\r\n      changeVegetation(beginX, beginY, endX, endY, value) {\r\n        beginX = Math.max(Math.floor(beginX),0);\r\n        beginY = Math.max(Math.floor(beginY),0);\r\n        endX = Math.min(Math.floor(endX), this.config.mapSize-1);\r\n        endY = Math.min(Math.floor(endY), this.config.mapSize-1);\r\n        for(let i=beginX;i<=endX;i++)\r\n          for(let j=beginY;j<=endY;j++)\r\n            this.map[i][j].vegetation+=value;\r\n      },\r\n      createMountain(minPos, posLen, minHei, heiLen, minRan, ranLen, ridgeNum, valleyNum, number){\r\n        for(let i=0;i<number;i++)\r\n          this.createMountainCore(minPos, posLen, minHei, heiLen, minRan, ranLen, ridgeNum, valleyNum);\r\n      },\r\n      createMountainCore(minPos, posLen, minHei, heiLen, minRan, ranLen, ridgeNum, valleyNum) {\r\n        let x = minPos+Math.floor(Math.random()*posLen),\r\n          y = minPos+Math.floor(Math.random()*posLen),\r\n          height = minHei+Math.random()*heiLen,\r\n          range = minRan+Math.floor(Math.random()*ranLen);\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            let distance = Math.sqrt((x-i)*(x-i)+(y-j)*(y-j));\r\n            if(distance<=range)\r\n              this.map[i][j].altitude+=(Math.cos(distance*Math.PI/range)+1)*height/2;\r\n            if(distance<=range*4/3)\r\n              this.map[i][j].altitude+=Math.random()*height/40;\r\n          }\r\n        }\r\n        //山脊\r\n        for(let n=0;n<ridgeNum;n++){\r\n          let vectorX = Math.random()-0.5, vectorY = Math.random()-0.5;\r\n          for(let i=0;i<this.config.mapSize;i++){\r\n            for(let j=0;j<this.config.mapSize;j++){\r\n              let distance = Math.sqrt((i-x)*(i-x)+(j-y)*(j-y));\r\n              let directionX = i-x, directionY = j-y;\r\n              let cos = this.cosOfTwoVector(directionX,directionY,vectorX,vectorY);\r\n              if(distance<=range*0.8 && cos>0.9995) {\r\n                let tempX = i+(2*Math.random()-1)*distance/8;\r\n                let tempY = j+(2*Math.random()-1)*distance/8;\r\n                this.changeAltitude(tempX-distance/10,\r\n                  tempY-distance/10,\r\n                  tempX+distance/10,\r\n                  tempY+distance/10,\r\n                  1-1/(distance+1));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        //山谷\r\n        for(let n=0;n<valleyNum;n++){\r\n          let vectorX = Math.random()-0.5, vectorY = Math.random()-0.5;\r\n          for(let i=0;i<this.config.mapSize;i++){\r\n            for(let j=0;j<this.config.mapSize;j++){\r\n              let distance = Math.sqrt((i-x)*(i-x)+(j-y)*(j-y));\r\n              let directionX = i-x, directionY = j-y;\r\n              let cos = this.cosOfTwoVector(directionX,directionY,vectorX,vectorY);\r\n              if(distance<=range*0.8 && cos>0.9995) {\r\n                let tempX = i+(2*Math.random()-1)*distance/8;\r\n                let tempY = j+(2*Math.random()-1)*distance/8;\r\n                this.changeAltitude(tempX-distance/10,\r\n                  tempY-distance/10,\r\n                  tempX+distance/10,\r\n                  tempY+distance/10,\r\n                  -1+1/(distance+1));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      createRiver(range, width) {\r\n        let highestPos = this.highestPos(this.config.mapSize/2, this.config.mapSize/2, this.config.mapSize/2);\r\n        let highestPosX = highestPos.x;\r\n        let highestPosY = highestPos.y;\r\n        // console.log(\"最高点：\", highestPosX, highestPosY);\r\n        let curX, curY;\r\n        do{\r\n          curX=highestPosX+Math.floor(Math.random()*range*2-range);\r\n          curY=highestPosY+Math.floor(Math.random()*range*2-range);\r\n          curX=Math.max(0,Math.min(this.config.mapSize-1,curX));\r\n          curY=Math.max(0,Math.min(this.config.mapSize-1,curY));\r\n          // console.log(\"河流生成点：\", curX, curY);\r\n        } while (this.map[curX][curY].overgroundWater > 0);\r\n        // console.log(\"最终河流生成点：\", curX, curY);\r\n        while(curX>=0 && curY>=0 && curX<=this.config.mapSize-1 && curY<=this.config.mapSize-1 &&\r\n        this.map[curX][curY].altitude>this.config.seaLevel && this.map[curX][curY].overgroundWater<15){\r\n          this.changeOvergroundWater(curX-width/2,curY-width/2,curX+width/2,curY+width/2,width*10/(10+this.map[curX][curY].slope));\r\n          let nextPos = this.lowestPos(curX,curY,width);\r\n          if(nextPos.x==curX && nextPos.y==curY)\r\n            break;\r\n          curX=Math.floor((curX+nextPos.x)/2+Math.random()*width-width/2);\r\n          curY=Math.floor((curY+nextPos.y)/2+Math.random()*width-width/2);\r\n          //curX=nextPos.x+Math.floor(Math.random()*width-width/2);\r\n          //curY=nextPos.y+Math.floor(Math.random()*width-width/2);\r\n        }\r\n      },\r\n      createOvergroundWater(){\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.map[i][j].overgroundWater = 0;\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            if(this.config.seaLevel-this.map[i][j].altitude>0){\r\n              this.map[i][j].overgroundWater = this.config.seaLevel-this.map[i][j].altitude;\r\n              this.map[i][j].vegetation = 0;\r\n            } else {\r\n              this.map[i][j].overgroundWater = 0;\r\n            }\r\n          }\r\n        }\r\n      },\r\n      createUndergroundWater(){\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.map[i][j].undergroundWater = 0;\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            if(this.map[i][j].overgroundWater>0){\r\n              let range = this.map[i][j].slope + this.map[i][j].overgroundWater/3;\r\n              this.changeUndergroundWater(i-range,j-range,i+range,j+range,Math.log(this.map[i][j].overgroundWater/50+1));\r\n            }\r\n          }\r\n        }\r\n      },\r\n      createVegetation() {\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            //植物生长条件：\r\n            //基准值 1/5\r\n            //地上水<0.1  y=-10x+1  线性  0~1\r\n            //地下水>0  y=5*ln(x+1)  对数  0~+∞\r\n            //海拔高生成少  y=200/(x+200)  反比例  1~+0\r\n            //随机数 0.9~1.1\r\n            //概率  y=v/(v+4)  反比例  0~1\r\n            if(this.canGrowVegetation(i, j)){\r\n              let value= 1/5\r\n                *(5*Math.log(this.map[i][j].undergroundWater+1))\r\n                *(-10*this.map[i][j].overgroundWater+1)\r\n                *(200/((this.map[i][j].altitude-this.config.seaLevel)+200))\r\n                *(Math.random()/5+0.9);\r\n              let prob=value/(value+3);\r\n              if(Math.random()<prob){\r\n                let range=value;\r\n                this.changeVegetation(i-range,j-range,i+range,j+range,value);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      canGrowVegetation(i, j){\r\n        return (this.map[i][j].overgroundWater<0.1 && this.map[i][j].undergroundWater>0);\r\n      },\r\n      highestPos(x,y,range) {\r\n        let pos={}, max=-10086;\r\n        let beginX=Math.max(0,x-range),\r\n          beginY=Math.max(0,y-range),\r\n          endX=Math.min(this.config.mapSize-1,x+range),\r\n          endY=Math.min(this.config.mapSize-1,y+range);\r\n        for(let i=beginX;i<=endX;i++)\r\n          for(let j=beginY;j<=endY;j++)\r\n            if(this.map[i][j].altitude>max){\r\n              max=this.map[i][j].altitude;\r\n              pos.x=i;\r\n              pos.y=j;\r\n              pos.altitude=max;\r\n            }\r\n        return pos;\r\n      },\r\n      lowestPos(x,y,range) {\r\n        let pos={}, min=this.config.maxHeight;\r\n        let beginX=Math.max(0,x-range),\r\n          beginY=Math.max(0,y-range),\r\n          endX=Math.min(this.config.mapSize-1,x+range),\r\n          endY=Math.min(this.config.mapSize-1,y+range);\r\n        for(let i=beginX;i<=endX;i++)\r\n          for(let j=beginY;j<=endY;j++)\r\n            if(this.map[i][j].altitude<min){\r\n              min=this.map[i][j].altitude;\r\n              pos.x=i;\r\n              pos.y=j;\r\n              pos.altitude=min;\r\n            }\r\n        return pos;\r\n      },\r\n      waveGround() {\r\n        //1随机\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            let random = Math.floor(Math.random()*10);\r\n            this.map[i][j].altitude+=random;\r\n          }\r\n        }\r\n        //2随机\r\n        for(let i=0;i<this.config.mapSize;i+=2){\r\n          for(let j=0;j<this.config.mapSize;j+=2){\r\n            let random = Math.floor(Math.random()*6);\r\n            this.changeAltitude(i,j,i+1,j+1,random);\r\n          }\r\n        }\r\n        //4随机\r\n        for(let i=0;i<this.config.mapSize;i+=4){\r\n          for(let j=0;j<this.config.mapSize;j+=4){\r\n            let random = Math.floor(Math.random()*2);\r\n            this.changeAltitude(i,j,i+3,j+3,random);\r\n          }\r\n        }\r\n      },\r\n      smoothLand() {\r\n        //默认range=1\r\n        let map2 = new Array(this.config.mapSize);\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          map2[i] = new Array(this.config.mapSize);\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            map2[i][j]={};\r\n            map2[i][j].altitude=this.map[i][j].altitude;\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            if(i==0 && j==0)\r\n              map2[i][j].altitude=(this.map[i][j].altitude+ this.map[i][j+1].altitude +\r\n                this.map[i+1][j].altitude+ this.map[i+1][j+1].altitude)/4;\r\n            else if(i==this.config.mapSize-1 && j==0)\r\n              map2[i][j].altitude=(this.map[i-1][j].altitude + this.map[i-1][j+1].altitude +\r\n                this.map[i][j].altitude+ this.map[i][j+1].altitude)/4;\r\n            else if(i==0 && j==this.config.mapSize-1)\r\n              map2[i][j].altitude=(this.map[i][j-1].altitude + this.map[i][j].altitude +\r\n                this.map[i+1][j-1].altitude + this.map[i+1][j].altitude)/4;\r\n            else if(i==this.config.mapSize-1 && j==this.config.mapSize-1)\r\n              map2[i][j].altitude=(this.map[i-1][j-1].altitude + this.map[i-1][j].altitude +\r\n                this.map[i][j-1].altitude + this.map[i][j].altitude)/4;\r\n            else if(i==0)\r\n              map2[i][j].altitude=(this.map[i][j-1].altitude + this.map[i][j].altitude+ this.map[i][j+1].altitude +\r\n                this.map[i+1][j-1].altitude + this.map[i+1][j].altitude+ this.map[i+1][j+1].altitude)/6;\r\n            else if(i==this.config.mapSize-1)\r\n              map2[i][j].altitude=(this.map[i-1][j-1].altitude + this.map[i-1][j].altitude + this.map[i-1][j+1].altitude +\r\n                this.map[i][j-1].altitude + this.map[i][j].altitude+ this.map[i][j+1].altitude)/6;\r\n            else if(j==0)\r\n              map2[i][j].altitude=(this.map[i-1][j].altitude + this.map[i-1][j+1].altitude +\r\n                this.map[i][j].altitude+ this.map[i][j+1].altitude +\r\n                this.map[i+1][j].altitude+ this.map[i+1][j+1].altitude)/6;\r\n            else if(j==this.config.mapSize-1)\r\n              map2[i][j].altitude=(this.map[i-1][j-1].altitude + this.map[i-1][j].altitude +\r\n                this.map[i][j-1].altitude + this.map[i][j].altitude +\r\n                this.map[i+1][j-1].altitude + this.map[i+1][j].altitude)/6;\r\n            else map2[i][j].altitude=(this.map[i-1][j-1].altitude + this.map[i-1][j].altitude + this.map[i-1][j+1].altitude +\r\n                this.map[i][j-1].altitude + this.map[i][j].altitude+ this.map[i][j+1].altitude +\r\n                this.map[i+1][j-1].altitude + this.map[i+1][j].altitude+ this.map[i+1][j+1].altitude)/9;\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.map[i][j].altitude=map2[i][j].altitude;\r\n          }\r\n        }\r\n      },\r\n      smoothOvergroundWater(range) {\r\n        let map2 = new Array(this.config.mapSize);\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          map2[i] = new Array(this.config.mapSize);\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            map2[i][j]={};\r\n            map2[i][j].overgroundWater=this.map[i][j].overgroundWater;\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            if(this.map[i][j].altitude>this.config.seaLevel-range){\r\n              let beginX=Math.max(0,i-range),beginY=Math.max(0,j-range),\r\n                endX=Math.min(this.config.mapSize-1,i+range),endY=Math.min(this.config.mapSize-1,j+range);\r\n              let total=0;\r\n              for(let ii=beginX;ii<=endX;ii++)\r\n                for(let jj=beginY;jj<=endY;jj++)\r\n                  total+=this.map[ii][jj].overgroundWater;\r\n              map2[i][j].overgroundWater=total/(range+range+1)/(range+range+1);\r\n            }\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.map[i][j].overgroundWater=map2[i][j].overgroundWater;\r\n          }\r\n        }\r\n      },\r\n      smoothVegetation(range) {\r\n        let map2 = new Array(this.config.mapSize);\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          map2[i] = new Array(this.config.mapSize);\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            map2[i][j]={};\r\n            map2[i][j].vegetation=this.map[i][j].vegetation;\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            if(this.map[i][j].overgroundWater<0.5){\r\n              let beginX=Math.max(0,i-range),beginY=Math.max(0,j-range),\r\n                endX=Math.min(this.config.mapSize-1,i+range),endY=Math.min(this.config.mapSize-1,j+range);\r\n              let total=0;\r\n              for(let ii=beginX;ii<=endX;ii++)\r\n                for(let jj=beginY;jj<=endY;jj++)\r\n                  total+=this.map[ii][jj].vegetation;\r\n              map2[i][j].vegetation=total/(range+range+1)/(range+range+1);\r\n            }\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            this.map[i][j].vegetation=map2[i][j].vegetation;\r\n          }\r\n        }\r\n      },\r\n      addVege(){\r\n        this.winding();\r\n        this.seeding();\r\n        this.renderMap();\r\n      },\r\n      seeding(){\r\n        let map2 = new Array(this.config.mapSize);\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          map2[i] = new Array(this.config.mapSize);\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            map2[i][j] = {vegetation: 0};\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            let value = this.map[i][j].vegetation;\r\n            let times = 1+Math.exp(-value/3);\r\n            map2[i][j].vegetation = this.map[i][j].vegetation * times;\r\n          }\r\n        }\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for (let j = 0; j < this.config.mapSize; j++) {\r\n            this.map[i][j].vegetation = map2[i][j].vegetation;\r\n          }\r\n        }\r\n      },\r\n      winding(){\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            //符合植物生长条件\r\n            if(this.canGrowVegetation(i, j)){\r\n              if(Math.random() < 0.01){\r\n                this.changeVegetation(i-1, j-1, i+1, j+1, 0.5);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      subVege(){\r\n        for(let i=0;i<this.config.mapSize;i++){\r\n          for(let j=0;j<this.config.mapSize;j++){\r\n            if(this.map[i][j].vegetation<1){\r\n              this.map[i][j].vegetation = 0;\r\n            } else {\r\n              this.map[i][j].vegetation *= 0.8;\r\n            }\r\n          }\r\n        }\r\n        this.renderMap();\r\n      },\r\n      changeSeaLevel(value){\r\n        let to = this.config.seaLevel + value;\r\n        if(to>=0){\r\n          this.config.seaLevel = to;\r\n          this.createOvergroundWater();\r\n          this.createUndergroundWater();\r\n          this.renderMap();\r\n        }\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/eco/eco.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isDialogShow),expression:\"!isDialogShow\"}],staticClass:\"board\"},[_c('div',{staticClass:\"ope\"},[_c('el-form',{attrs:{\"label-width\":\"60px\"}},[_c('el-form-item',{attrs:{\"label\":\"x\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.showData.x),callback:function ($$v) {_vm.$set(_vm.showData, \"x\", $$v)},expression:\"showData.x\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"y\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.showData.y),callback:function ($$v) {_vm.$set(_vm.showData, \"y\", $$v)},expression:\"showData.y\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"海拔\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.showData.altitude),callback:function ($$v) {_vm.$set(_vm.showData, \"altitude\", $$v)},expression:\"showData.altitude\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"坡度\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.showData.slope),callback:function ($$v) {_vm.$set(_vm.showData, \"slope\", $$v)},expression:\"showData.slope\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"地上水\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.showData.overgroundWater),callback:function ($$v) {_vm.$set(_vm.showData, \"overgroundWater\", $$v)},expression:\"showData.overgroundWater\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"地下水\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.showData.undergroundWater),callback:function ($$v) {_vm.$set(_vm.showData, \"undergroundWater\", $$v)},expression:\"showData.undergroundWater\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"植被\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.showData.vegetation),callback:function ($$v) {_vm.$set(_vm.showData, \"vegetation\", $$v)},expression:\"showData.vegetation\"}})],1)],1)],1),_vm._v(\" \"),_c('canvas',{attrs:{\"id\":\"c1\"},on:{\"mousemove\":_vm.mousemove,\"mouseout\":_vm.mouseout}}),_vm._v(\" \"),_c('div',{staticClass:\"ope\"},[_c('el-form',{attrs:{\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"地图大小\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.config.mapSize),callback:function ($$v) {_vm.$set(_vm.config, \"mapSize\", $$v)},expression:\"config.mapSize\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"格子像素\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.config.blockPix),callback:function ($$v) {_vm.$set(_vm.config, \"blockPix\", $$v)},expression:\"config.blockPix\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"海平面\"}},[_c('el-input',{attrs:{\"size\":\"small\",\"readonly\":true},model:{value:(_vm.config.seaLevel),callback:function ($$v) {_vm.$set(_vm.config, \"seaLevel\", $$v)},expression:\"config.seaLevel\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"陆地等高距\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"min\":1},on:{\"change\":function($event){return _vm.renderMap()}},model:{value:(_vm.config.contourDistanceOfLand),callback:function ($$v) {_vm.$set(_vm.config, \"contourDistanceOfLand\", $$v)},expression:\"config.contourDistanceOfLand\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"海洋等高距\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"min\":1},on:{\"change\":function($event){return _vm.renderMap()}},model:{value:(_vm.config.contourDistanceOfOcean),callback:function ($$v) {_vm.$set(_vm.config, \"contourDistanceOfOcean\", $$v)},expression:\"config.contourDistanceOfOcean\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"植被等高距\"}},[_c('el-input-number',{attrs:{\"size\":\"small\",\"min\":1},on:{\"change\":function($event){return _vm.renderMap()}},model:{value:(_vm.config.contourDistanceOfVegetation),callback:function ($$v) {_vm.$set(_vm.config, \"contourDistanceOfVegetation\", $$v)},expression:\"config.contourDistanceOfVegetation\"}})],1)],1)],1)]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isDialogShow),expression:\"!isDialogShow\"}],staticClass:\"btns\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.isDialogShow=true}}},[_vm._v(\"重开\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.start()}}},[_vm._v(\"重绘\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.addVege()}}},[_vm._v(\"植物传播\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.subVege()}}},[_vm._v(\"植物枯萎\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.changeSeaLevel(2)}}},[_vm._v(\"降雨\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.changeSeaLevel(-2)}}},[_vm._v(\"蒸发\")])],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"新游戏\",\"center\":\"\",\"visible\":_vm.isDialogShow,\"width\":\"360px\",\"show-close\":_vm.falseData,\"close-on-click-modal\":_vm.falseData,\"close-on-press-escape\":_vm.falseData},on:{\"update:visible\":function($event){_vm.isDialogShow=$event}}},[_c('el-form',{attrs:{\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"地图大小\"}},[_c('el-input-number',{attrs:{\"min\":10,\"max\":500,\"step\":10},model:{value:(_vm.config.mapSize),callback:function ($$v) {_vm.$set(_vm.config, \"mapSize\", $$v)},expression:\"config.mapSize\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"格子像素\"}},[_c('el-input-number',{attrs:{\"min\":1,\"max\":10,\"step\":1},model:{value:(_vm.config.blockPix),callback:function ($$v) {_vm.$set(_vm.config, \"blockPix\", $$v)},expression:\"config.blockPix\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"海平面\"}},[_c('el-input-number',{attrs:{\"min\":0,\"step\":2},model:{value:(_vm.config.seaLevel),callback:function ($$v) {_vm.$set(_vm.config, \"seaLevel\", $$v)},expression:\"config.seaLevel\"}})],1)],1),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.start()}}},[_vm._v(\"开始\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-16d0b968\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/components/eco/eco.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-16d0b968\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./eco.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./eco.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./eco.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-16d0b968\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./eco.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-16d0b968\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/eco/eco.vue\n// module id = null\n// module chunks = ","export default {\r\n  data(){\r\n    return{\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    linearColorRGB(x1,r1,g1,b1,x2,r2,g2,b2,x,gap=1) {\r\n      let rgb = {};\r\n      gap = gap<1 ? 1 : gap;\r\n      x = x-x%gap;\r\n      rgb.r = Math.floor((r2-r1)/(x2-x1)*x+(r1*x2-r2*x1)/(x2-x1));\r\n      rgb.g = Math.floor((g2-g1)/(x2-x1)*x+(g1*x2-g2*x1)/(x2-x1));\r\n      rgb.b = Math.floor((b2-b1)/(x2-x1)*x+(b1*x2-b2*x1)/(x2-x1));\r\n      return rgb;\r\n    },\r\n    inverseColorRGB(x1,r1,g1,b1,r2,g2,b2,flag,x,gap=1) {\r\n      let rgb = {};\r\n      gap = gap<1 ? 1 : gap;\r\n      x = x-x%gap;\r\n      rgb.r = Math.floor(r2-x1*(r2-r1)/((x-x1)/flag+x1));\r\n      rgb.g = Math.floor(g2-x1*(g2-g1)/((x-x1)/flag+x1));\r\n      rgb.b = Math.floor(b2-x1*(b2-b1)/((x-x1)/flag+x1));\r\n      return rgb;\r\n    },\r\n    cosOfTwoVector(x1,y1,x2,y2) {\r\n      let zi = x1*x2+y1*y2;\r\n      let mu = Math.sqrt((x1*x1+y1*y1)*(x2*x2+y2*y2));\r\n      return zi/mu;\r\n    }\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/eco/util.js"],"sourceRoot":""}